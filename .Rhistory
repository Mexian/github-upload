head(virtual_resample, 10)
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
library(tidyverse)
library(moderndive)
library(infer)
# check it out
glimpse(pennies_sample)
head(pennies_sample, 10)
ggplot(pennies_sample, aes(x = year)) +
geom_histogram(binwidth = 10, color = "white")
# use summarize() to get the mean
x_bar <- pennies_sample %>%
summarize(mean_year = mean(year))
x_bar
pennies_resample <- tibble(
year = c(1976, 1962, 1976, 1983, 2017, 2015, 2015, 1962, 2016, 1976,
2006, 1997, 1988, 2015, 2015, 1988, 2016, 1978, 1979, 1997,
1974, 2013, 1978, 2015, 2008, 1982, 1986, 1979, 1981, 2004,
2000, 1995, 1999, 2006, 1979, 2015, 1979, 1998, 1981, 2015,
2000, 1999, 1988, 2017, 1992, 1997, 1990, 1988, 2006, 2000)
)
pennies_resample %>%
summarize(mean_year = mean(year))
# explore it
glimpse(pennies_resamples)
head(pennies_resamples, 10)
resampled_means <- pennies_resamples %>%
group_by(name) %>%
summarize(mean_year = mean(year))
head(resampled_means, 10)
ggplot(resampled_means, aes(x = mean_year)) +
geom_histogram(binwidth = 1, boundary = 1990, color = "white") +
labs(x = "Sampled mean year")
# use rep_sample_n() to perform the resampling with replacement of the 50 slips of paper representing our original sample 50 pennies:
virtual_resample <- pennies_sample %>%
rep_sample_n(size = 50, replace = TRUE)
glimpse(virtual_resample)
head(virtual_resample, 10)
virtual_resample %>%
summarize(resample_mean = mean(year))
virtual_resample %>%
summarize(resample_mean = mean(year))
virtual_resample %>%
summarize(resample_mean = mean(year))
# use rep_sample_n() to perform the resampling with replacement of the 50 slips of paper representing our original sample 50 pennies:
virtual_resample <- pennies_sample %>%
rep_sample_n(size = 50, replace = TRUE)
glimpse(virtual_resample)
head(virtual_resample, 10)
virtual_resample %>%
summarize(resample_mean = mean(year))
# use rep_sample_n() to perform the resampling with replacement of the 50 slips of paper representing our original sample 50 pennies:
virtual_resample <- pennies_sample %>%
rep_sample_n(size = 50, replace = TRUE)
glimpse(virtual_resample)
head(virtual_resample, 10)
virtual_resample %>%
summarize(resample_mean = mean(year))
virtual_resamples <- pennies_sample %>%
rep_sample_n(size = 50, replace = TRUE, reps = 35)
glimpse(virtual_resamples)
head(virtual_resamples, 10)
virtual_resampled_means <- virtual_resamples %>%
group_by(replicate) %>%
summarize(mean_year = mean(year))
head(virtual_resampled_means, 10)
ggplot(virtual_resampled_means, aes(x = mean_year)) +
geom_histogram(bidwidth = 1, boundary = 1990, color = "white") +
labs(x = "Resample mean year")
ggplot(virtual_resampled_means, aes(x = mean_year)) +
geom_histogram(bidwidth = 1, boundary = 1990, color = "white") +
labs(x = "Resample mean year")
ggplot(virtual_resampled_means, aes(x = mean_year)) +
geom_histogram(bidwidth = 1, boundary = 1990, color = "white") +
labs(x = "Resample mean year")
virtual_resampled_means <- virtual_resamples %>%
group_by(replicate) %>%
summarize(mean_year = mean(year))
head(virtual_resampled_means, 10)
ggplot(virtual_resampled_means, aes(x = mean_year)) +
geom_histogram(bidwidth = 1, boundary = 1990, color = "white") +
labs(x = "Resample mean year")
virtual_resamples <- pennies_sample %>%
rep_sample_n(size = 50, replace = TRUE, reps = 35)
glimpse(virtual_resamples)
head(virtual_resamples, 10)
virtual_resampled_means <- virtual_resamples %>%
group_by(replicate) %>%
summarize(mean_year = mean(year))
head(virtual_resampled_means, 10)
ggplot(virtual_resampled_means, aes(x = mean_year)) +
geom_histogram(bidwidth = 1, boundary = 1990, color = "white") +
labs(x = "Resample mean year")
ggplot(virtual_resampled_means, aes(x = mean_year)) +
geom_histogram(bidwidth = 1, boundary = 1990, color = "white") +
labs(x = "Resample mean year")
virtual_resamples <- pennies_sample %>%
rep_sample_n(size = 50, replace = TRUE, reps = 35)
glimpse(virtual_resamples)
head(virtual_resamples, 10)
virtual_resampled_means <- virtual_resamples %>%
group_by(replicate) %>%
summarize(mean_year = mean(year))
head(virtual_resampled_means, 10)
ggplot(virtual_resampled_means, aes(x = mean_year)) +
geom_histogram(bidwidth = 1, boundary = 1990, color = "white") +
labs(x = "Resample mean year")
ggplot(virtual_resampled_means, aes(x = mean_year)) +
geom_histogram(binwidth = 1, boundary = 1990, color = "white") +
labs(x = "Resample mean year")
virtual_resamples <- pennies_sample %>%
rep_sample_n(size = 50, replace = TRUE, reps = 35)
glimpse(virtual_resamples)
head(virtual_resamples, 10)
virtual_resampled_means <- virtual_resamples %>%
group_by(replicate) %>%
summarize(mean_year = mean(year))
head(virtual_resampled_means, 10)
ggplot(virtual_resampled_means, aes(x = mean_year)) +
geom_histogram(binwidth = 1, boundary = 1990, color = "white") +
labs(x = "Resample mean year")
ggplot(virtual_resampled_means, aes(x = mean_year)) +
geom_histogram(binwidth = 1, boundary = 1990, color = "white") +
labs(x = "Resample mean year")
virtual_resamples <- pennies_sample %>%
rep_sample_n(size = 50, replace = TRUE, reps = 35)
glimpse(virtual_resamples)
head(virtual_resamples, 10)
virtual_resampled_means <- virtual_resamples %>%
group_by(replicate) %>%
summarize(mean_year = mean(year))
head(virtual_resampled_means, 10)
ggplot(virtual_resampled_means, aes(x = mean_year)) +
geom_histogram(binwidth = 1, boundary = 1990, color = "white") +
labs(x = "Resample mean year")
virtual_resamples <- pennies_sample %>%
rep_sample_n(size = 50, replace = TRUE, reps = 35)
glimpse(virtual_resamples)
head(virtual_resamples, 10)
virtual_resampled_means <- virtual_resamples %>%
group_by(replicate) %>%
summarize(mean_year = mean(year))
head(virtual_resampled_means, 10)
ggplot(virtual_resampled_means, aes(x = mean_year)) +
geom_histogram(binwidth = 1, boundary = 1990, color = "white") +
labs(x = "Resample mean year")
virtual_resamples <- pennies_sample %>%
rep_sample_n(size = 50, replace = TRUE, reps = 35)
glimpse(virtual_resamples)
head(virtual_resamples, 10)
virtual_resampled_means <- virtual_resamples %>%
group_by(replicate) %>%
summarize(mean_year = mean(year))
head(virtual_resampled_means, 10)
ggplot(virtual_resampled_means, aes(x = mean_year)) +
geom_histogram(binwidth = 1, boundary = 1990, color = "white") +
labs(x = "Resample mean year")
virtual_resamples <- pennies_sample %>%
rep_sample_n(size = 50, replace = TRUE, reps = 35)
glimpse(virtual_resamples)
head(virtual_resamples, 10)
virtual_resampled_means <- virtual_resamples %>%
group_by(replicate) %>%
summarize(mean_year = mean(year))
head(virtual_resampled_means, 10)
ggplot(virtual_resampled_means, aes(x = mean_year)) +
geom_histogram(binwidth = 1, boundary = 1990, color = "white") +
labs(x = "Resample mean year")
virtual_resamples <- pennies_sample %>%
rep_sample_n(size = 50, replace = TRUE, reps = 35)
glimpse(virtual_resamples)
head(virtual_resamples, 10)
virtual_resampled_means <- virtual_resamples %>%
group_by(replicate) %>%
summarize(mean_year = mean(year))
head(virtual_resampled_means, 10)
ggplot(virtual_resampled_means, aes(x = mean_year)) +
geom_histogram(binwidth = 1, boundary = 1990, color = "white") +
labs(x = "Resample mean year")
virtual_resamples <- pennies_sample %>%
rep_sample_n(size = 50, replace = TRUE, reps = 35)
glimpse(virtual_resamples)
head(virtual_resamples, 10)
virtual_resampled_means <- virtual_resamples %>%
group_by(replicate) %>%
summarize(mean_year = mean(year))
head(virtual_resampled_means, 10)
ggplot(virtual_resampled_means, aes(x = mean_year)) +
geom_histogram(binwidth = 1, boundary = 1990, color = "white") +
labs(x = "Resample mean year")
# Repeat resampling 1000 times
virtual_resamples <- pennies_sample %>%
rep_sample_n(size = 50, replace = TRUE, reps = 1000)
# Compute 1000 sample means
virtual_resampled_means <- virtual_resamples %>%
group_by(replicate) %>%
summarize(mean_year = mean(year))
virtual_resampled_means <- pennies_sample %>%
rep_sample_n(size = 50, replace = TRUE, reps = 1000) %>%
group_by(replicate) %>%
summarize(mean_year = mean(year))
glimpse(virtual_resampled_means)
head(virtual_resampled_means, 10)
ggplot(virtual_resampled_means, aes(x = mean_year)) +
geom_histogram(binwidth = 1, boundary = 1990, color = "white") +
labs(x = "sample mean")
virtual_resampled_means %>%
summarize(mean_of_means = mean(mean_year))
virtual_resampled_means %>%
summarize(SE = sd(mean_year))
pennies_sample %>%
summarize(stats = mean(year))
pennies_sample %>%
specify(response = year) %>%
calculate(stat = "mean")
pennies_sample %>%
specify(response = year)
bootstrap_distribution <- pennies_sample %>%
specify(response = year) %>%
generate(reps = 1000) %>%
calculate(stat = "mean")
head(bootstrap_distribution, 10)
bootstrap_distribution <- pennies_sample %>%
specify(response = year) %>%
generate(reps = 1000) %>%
calculate(stat = "mean")
glimpse(bootstrap_distribution)
head(bootstrap_distribution, 10)
visualize(bootstrap_distribution)
percentile_ci <- bootstrap_distribution %>%
get_confidence_interval(level = 0.95, type = "percentile")
percentile_ci
visualize(bootstrap_distribution) +
shade_confidence_interval(endpoints = percentile_ci)
visualize(bootstrap_distribution) +
shade_ci(endpoints = percentile_ci, color = "hotpink", fill = "khaki")
standard_error_ci <- bootstrap_distribution %>%
get_confidence_interval(type = "se", point_estimate = x_bar)
standard_error_ci <- bootstrap_distribution %>%
get_confidence_interval(type = "se", point_estimate = x_bar)
standard_error_ci
visualize(bootstrap_distribution) +
shade_ci(endpoitns = standard_error_ci)
visualize(bootstrap_distribution) +
shade_ci(endpoints = standard_error_ci)
visualize(bootstrap_distribution) +
shade_confidence_interval(endpoints = standard_error_ci)
bowl %>%
summarize(p_red = mean(color == "red"))
glimpse(bowl_sample_1)
head(bowl_sample_1)
glimpse(bowl_sample_1)
head(bowl_sample_1, 10)
# We need to define which event is of interest! red or white in the success argument.
bowl_sample_1 %>%
specify(response = color, success = "red")
bowl_sample_1 %>%
specify(response = color, success = "red") %>%
generate(reps = 1000, type = "bootstrap")
#  Let’s save the result as sample_1_bootstrap:
sample_1_bootstrap <- bowl_sample_1 %>%
specify(response = color, success = "red") %>%
generate(reps = 1000, type = "bootstrap") %>%
calculate(stat = "prop")
head(sample_1_bootstrap)
#  Let’s save the result as sample_1_bootstrap:
sample_1_bootstrap <- bowl_sample_1 %>%
specify(response = color, success = "red") %>%
generate(reps = 1000, type = "bootstrap") %>%
calculate(stat = "prop")
head(sample_1_bootstrap, 10)
#  Let’s save the result as sample_1_bootstrap:
sample_1_bootstrap <- bowl_sample_1 %>%
specify(response = color, success = "red") %>%
generate(reps = 1000, type = "bootstrap") %>%
calculate(stat = "prop")
glimpse(sample_1_bootstrap)
head(sample_1_bootstrap, 10)
percentile_ci_1 <- sample_1_bootstrap %>%
get_confidence_interval(level = 0.95, type = "percentile")
percentile_ci_1
sample_1_bootstrap %>%
visualize(bins = 15) +
shade_confidence_interval(endpoints = percentile_ci_1) +
geom_vline(xintercept = 0.42, linetype = "dashed")
sample_1_bootstrap %>%
visualize(bins = 15) +
shade_confidence_interval(endpoints = percentile_ci_1) +
geom_vline(xintercept = 0.42, linetype = "dashed")
bowl_sample_2 <- bowl %>% rep_sample_n(size = 50)
head(bowl_sample_2)
bowl_sample_2 <- bowl %>% rep_sample_n(size = 50)
head(bowl_sample_2, 10)
bowl_sample_2 <- bowl %>% rep_sample_n(size = 50)
glimpse(bowl_sample_2)
head(bowl_sample_2, 10)
sample_2_bootstrap <- bowl_sample_2 %>%
specify(response = color,
success = "red") %>%
generate(reps = 1000,
type = "bootstrap") %>%
calculate(stat = "prop")
glimpse(sample_2_bootstrap)
head(sample_2_bootstrap, 10)
percentile_ci_2 <- sample_2_bootstrap %>%
get_confidence_interval(level = 0.95, type = "percentile")
percentile_ci_2
install.packages("ggplot2movies")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(infer)
library(moderndive)
library(nycflights13)
library(ggplot2movies)
knitr::opts_chunk$set(echo = TRUE, message=FALSE, warning=FALSE)
library(tidyverse)
library(infer)
library(moderndive)
library(nycflights13)
library(ggplot2movies)
promotions %>%
sample_n(size = 6) %>%
arrange(id)
glimpse(promotions)
promotions %>%
sample_n(size = 6) %>%
arrange(id)
ggplot(promotions, aes(x = gender, fill = decision)) +
geom_bar() +
labs(x = "Gender of name on résumé")
# Use of the tally() function here which is a shortcut for summarize(n = n()) to get counts
promotions %>%
group_by(gender, decision) %>%
tally()
glimpse(promotions_shuffled)
ggplot(promotions_shuffled, aes(x = gender, fill = decision)) +
geom_bar() +
labs(x = "Gender of résumé name")
promotions_shuffled %>%
group_by(gender, decision) %>%
tally() # Same as summarize(n = n())
knitr::opts_chunk$set(echo = TRUE, message=FALSE, warning=FALSE)
library(tidyverse)
library(infer)
library(moderndive)
library(nycflights13)
library(ggplot2movies)
glimpse(promotions)
promotions %>%
sample_n(size = 6) %>%
arrange(id)
ggplot(promotions, aes(x = gender, fill = decision)) +
geom_bar() +
labs(x = "Gender of name on résumé")
# Use of the tally() function here which is a shortcut for summarize(n = n()) to get counts
promotions %>%
group_by(gender, decision) %>%
tally()
glimpse(promotions_shuffled)
ggplot(promotions_shuffled, aes(x = gender, fill = decision)) +
geom_bar() +
labs(x = "Gender of résumé name")
promotions_shuffled %>%
group_by(gender, decision) %>%
tally() # Same as summarize(n = n())
knitr::opts_chunk$set(echo = TRUE, message=FALSE, warning=FALSE)
library(tidyverse)
library(infer)
library(moderndive)
library(nycflights13)
library(ggplot2movies)
glimpse(promotions)
promotions %>%
sample_n(size = 6) %>%
arrange(id)
ggplot(promotions, aes(x = gender, fill = decision)) +
geom_bar() +
labs(x = "Gender of name on résumé")
# Use of the tally() function here which is a shortcut for summarize(n = n()) to get counts
promotions %>%
group_by(gender, decision) %>%
tally()
glimpse(promotions_shuffled)
ggplot(promotions_shuffled, aes(x = gender, fill = decision)) +
geom_bar() +
labs(x = "Gender of résumé name")
promotions_shuffled %>%
group_by(gender, decision) %>%
tally() # Same as summarize(n = n())
knitr::opts_chunk$set(echo = TRUE, message=FALSE, warning=FALSE)
library(tidyverse)
library(infer)
library(moderndive)
library(nycflights13)
library(ggplot2movies)
glimpse(promotions)
promotions %>%
sample_n(size = 6) %>%
arrange(id)
ggplot(promotions, aes(x = gender, fill = decision)) +
geom_bar() +
labs(x = "Gender of name on résumé")
# Use of the tally() function here which is a shortcut for summarize(n = n()) to get counts
promotions %>%
group_by(gender, decision) %>%
tally()
glimpse(promotions_shuffled)
ggplot(promotions_shuffled, aes(x = gender, fill = decision)) +
geom_bar() +
labs(x = "Gender of résumé name")
promotions_shuffled %>%
group_by(gender, decision) %>%
tally() # Same as summarize(n = n())
null_distrubution <- promotions %>%
specify(formula = decision ~ gender, success = "promoted") %>%
hypothesize(null = "independence") %>%
generate(reps = 1000, type = "permute") %>%
calculate(stat = "diff in props", order = c("male", "female"))
head(null_distrubution, 10)
# Let’s save this in obs_diff_prop:
obs_diff_prop <- promotions %>%
specify(decision ~ gender, success = "promoted") %>%
calculate(stat = "diff in props", order = c("male", "female")) %>%
head(obs_diff_prop, 10)
# Let’s save this in obs_diff_prop:
obs_diff_prop <- promotions %>%
specify(decision ~ gender, success = "promoted") %>%
calculate(stat = "diff in props", order = c("male", "female"))
head(obs_diff_prop, 10)
visualize(null_distrubution, bins = 10)
null_distribution <- promotions %>%
specify(formula = decision ~ gender, success = "promoted") %>%
hypothesize(null = "independence") %>%
generate(reps = 1000, type = "permute") %>%
calculate(stat = "diff in props", order = c("male", "female"))
head(null_distribution, 10)
# Let’s save this in obs_diff_prop:
obs_diff_prop <- promotions %>%
specify(decision ~ gender, success = "promoted") %>%
calculate(stat = "diff in props", order = c("male", "female"))
head(obs_diff_prop, 10)
visualize(null_distribution, bins = 10)
visualize(null_distribution, bins = 10) +
shade_p_value(obs_stat = obs_diff_prop, direction = "right")
knitr::opts_chunk$set(echo = TRUE, message=FALSE, warning=FALSE)
library(tidyverse)
library(infer)
library(moderndive)
library(nycflights13)
library(ggplot2movies)
glimpse(promotions)
promotions %>%
sample_n(size = 6) %>%
arrange(id)
ggplot(promotions, aes(x = gender, fill = decision)) +
geom_bar() +
labs(x = "Gender of name on résumé")
# Use of the tally() function here which is a shortcut for summarize(n = n()) to get counts
promotions %>%
group_by(gender, decision) %>%
tally()
glimpse(promotions_shuffled)
ggplot(promotions_shuffled, aes(x = gender, fill = decision)) +
geom_bar() +
labs(x = "Gender of résumé name")
promotions_shuffled %>%
group_by(gender, decision) %>%
tally() # Same as summarize(n = n())
null_distribution <- promotions %>%
specify(formula = decision ~ gender, success = "promoted") %>%
hypothesize(null = "independence") %>%
generate(reps = 1000, type = "permute") %>%
calculate(stat = "diff in props", order = c("male", "female"))
head(null_distribution, 10)
# Let’s save this in obs_diff_prop:
obs_diff_prop <- promotions %>%
specify(decision ~ gender, success = "promoted") %>%
calculate(stat = "diff in props", order = c("male", "female"))
head(obs_diff_prop, 10)
visualize(null_distribution, bins = 10)
visualize(null_distribution, bins = 10) +
shade_p_value(obs_stat = obs_diff_prop, direction = "right")
# use get_p_value()
null_distribution %>%
get_p_value(obs_stat = obs_diff_prop, direction = "rigt")
# use get_p_value()
null_distribution %>%
get_p_value(obs_stat = obs_diff_prop, direction = "right")
bootstrap_distribution <- promotions %>%
specify(formula = decision ~ gender, success = "promoted") %>%
generate(reps = 1000, type = "bootstrap") %>%
calculate(stat = "diff in props", order = c("male", "female"))
percentile_ci <- bootstrap_distribution %>%
get_confidence_interval(level = 0.95, type = "percentile")
percentile_ci
percentile_ci <- bootstrap_distribution %>%
get_confidence_interval(level = 0.95, type = "percentile")
percentile_ci
# visualize it
visualize(bootstrap_distribution) +
shade_confidence_interval(endpoints = percentile_ci)
se_ci <- bootstrap_distribution %>%
get_confidence_interval(level = 0.95, type = "se",
point_estimate = obs_diff_prop)
se_ci
# visualize it
visualize(bootstrap_distribution) +
shade_confidence_interval(endpoints = se_ci)
swirl()
library("swirl")
swirl()
bye()
